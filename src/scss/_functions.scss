@use "variables" as *;

@function check-args($args, $types...) {
  $args-length: length($args);
  $types-length: length($types);

  @if $args-length != $types-length {
    $description: if($types-length != 1, "arguments", "argument");
    @error "Expected #{$types-length} #{$description}, but got #{$args-length}.";
  }

  @for $i from 1 through length($args) {
    $arg-type: type-of(nth($args, $i));
    $expected-type: nth($types, $i);

    @if $arg-type != $expected-type {
      @error "Argument #{$i} is expected to be #{$expected-type}, but received #{$arg-type}";
    }
  }

  @return true;
}

@function pxToResponsiveUnit($px, $unit: rem) {
  @if check-args(($px, $unit), number, string) {
    $units: (
      rem: 1rem,
      em: 1em,
    );

    @if map-has-key($units, $unit) == false {
      @error "Invalid target unit: #{$unit}. Please use one of: #{map-keys($units)}";
    }

    @return calc($px / $base-font-size * map-get($units, $unit));
  }
}
